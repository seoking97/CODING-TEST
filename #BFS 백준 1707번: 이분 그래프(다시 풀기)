# 정점의 집합을 둘로 분할
# 각 집합에 속한 정점끼리는 "서로 인접하지 않도록" 분할:  1 -> -1 -> 1... 
# 그래프의 정점 갯수 / 간선의 갯수

from collections import deque
import sys

testcase = int(input())
result = []
for _ in range(testcase):
    
    vertex_num, edge_num = map(int, sys.stdin.readline().split())
    li = [[] for i in range(0,vertex_num+1)]
    visit = [0 for i in range(0,vertex_num+1)]

    for _ in range(edge_num):
        x,y = map(int, sys.stdin.readline().split())
        li[y].append(x)
        li[x].append(y)
   
    q = deque()
    def bfs(start):
       
        q.append(start)
        visit[start] = 1
       
        while q:
           start = q.popleft()
           for i in li[start]:
                
             if visit[i] == 0:
                 visit[i] = -1 * visit[start]
                 q.append(i)
            
             elif visit[i] == visit[start]:
                 return False 
        
        return True  
    
    flag = 1
    for i in range(1,vertex_num+1):
        if visit[i] == 0:
            if not bfs(i):
                flag = -1
                break
        
    print('YES' if flag == 1 else 'NO')
