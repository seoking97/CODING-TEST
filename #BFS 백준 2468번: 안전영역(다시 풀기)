from collections import deque
n = int(input())     

max = 0
graph = []
for i in range(n):
    tmp = list(map(int, input().split()))
    graph.append(tmp)
   
    for j in range(n):
        if graph[i][j] > max:
            max = graph[i][j]
            
dx = [-1,1,0,0]
dy = [0,0,-1,1]
    
def bfs(x,y,num,visit):
    
    q = deque()
    q.append((x,y))
    visit[x][y] = 1
    
    while q:
        x, y = q.popleft()
        
        for i in range(4):
            nx = x + dx[i]
            ny = y + dy[i]
            
            if(0 <= nx < n) and (0 <= ny < n):          
                if visit[nx][ny] == 0 and graph[nx][ny] > num:
                    visit[nx][ny] = 1
                    q.append((nx,ny))
    
ans = 0
for i in range(max):
    
    visit = [[0]*n for i in range(n)]  
    count = 0
    for x in range(n):
        for y in range(n):
            
            if graph[x][y] > i and visit[x][y] == 0:
                visit[x][y] = 1    
                bfs(x,y,i,visit)
                count += 1
                
    ans = max(ans, count)
print(ans)   
            
            
